[tool.poetry]
name = "ultravox"
version = "0.1.0"
description = ""
authors = ["Fixie.ai Team <founders@fixie.ai>"]
packages = [{ include = "ultravox/" }]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
torch = ">=2.6"
transformers = {version = ">=4.51.3", extras = ["torch"]}
huggingface-hub = {version = ">=0.27.0", extras = ["hf_xet"]}
peft = "~0.11.1"
simple-parsing = "~0.1.5"
librosa = "~0.10.2.post1"
requests = ">=2.31.0"
datasets =  ">=3.5.0, <4.0"
mosaicml-streaming = "~0.7.6"
nltk = "~3.8.1"
truecase = "~0.0.14"
sentencepiece = "~0.2.0"
protobuf = "~4.25.3"
dataclasses-json = "~0.6.7"
openai = ">=1.60.0"
jiwer = "~3.0.4"
tensorboardx = "~2.6.2.2"
wandb = ">=0.19.10"
sacrebleu = {version = "^2.4.2"}
mecab-ko = "*"       # Required for Korean tokenization in sacrebleu
mecab-python3 = "*"  # Required for Japanese tokenization in sacrebleu
ipadic = "*"         # IPA dictionary for MeCab
tenacity = "^9.0.0"
evals = {git = "https://github.com/fixie-ai/evals"}
torchaudio = "^2.6"
scipy = "^1.14.1"
einops = "^0.8.0"
praatio = "^6.2.0"
hf-transfer = "^0.1.8"
annoy = "^1.17.3"
coverage = "^7.6.10"
whisper_normalizer = ">=0.1.0"
evaluate = "^0.4.3"
deepgram-sdk = "^3.10.1"
vocos = "^0.1.0"
torchdiffeq = "*"
x-transformers = "*"
rich = "<13.5.0"
qa-metrics = ">=0.2.42"

[tool.poetry.group.dev.dependencies]
black = "~24.4.2"
isort = "~5.13.2"
mypy = "^1.15.0"
autoflake = "~2.3.1"
pytest = "~8.2.2"
fsspec = "~2024.3.1"
gcsfs = "~2024.3.1"
sounddevice = "~0.4.7"
gradio-webrtc = {version = ">0.0.19", extras = ["vad"]}
gpustat = "~1.1.1"
types-requests = "~2.26.0"
types-pyyaml = "^6.0.12.20240724"
ruff = "^0.11.8"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disable_error_code = ["no-any-return", "import-untyped"]

[[tool.mypy.overrides]]
# Treat transformers as untyped by not following imports into it
module = "transformers.*"
follow_imports = "skip"

[tool.isort]
profile = "black"
single_line_exclusions = ["typing", "collections.abc", "typing_extensions"]
skip = [
  "venv",
  ".venv",
  "third_party",
]

[tool.black]
extend-exclude = '''
/(
  | third_party
  | venv
)/
'''

[tool.coverage.run]
relative_files = true
source = ["ultravox"]
branch = true

[tool.coverage.report]
show_missing = true

[tool.ruff]
src = ["ultravox"]
line-length = 88
target-version = "py311"
extend-exclude = ["third_party", "ultravox/assets"]

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "PYI"]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
